When would you want to use a remote repository rather than keeping all your work local?

One reason to use a remote repository would be for backup. If something happens to your
local computer and you can't access your repository, you would still be able to get to your work
on the remote reposirtory.
Another reason to use remote repository is if your are working from two different computers, or
with more people.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

If Git automatically did periodic updating from the remote repository, you could
lose everything your worked on up to that point if you hadn't previously pushed
it into the remote.

Describe the differences between forks, clones, and branches. When would you
use one instead of another?

A clone is a copy of a repository that is on a local machine. So far, we've only
dealt with clones in the way that we make a clone from github onto our local
machine, but it is possible to make a clone of a repository on the same machine.
A fork is clone, but it is a repository of another's github work into your
github and it generally tracks the changes you've made since you created the
fork. You can add collaborators to the fork, though.
A branch is a part of a repository wherein the commits "branch" off from one
another. There is almost always a "master" branch, which contains the most
up-to-date official commit. a common use for branches is to keep your master
for debugging (if that) and work out/add in new features on a different branch.

 What is the benefit of having a copy of the last known state of the remote
 stored locally?

 Having a copy of the last know state of the remote stored locally is
 beneficial if you are not going to be connecting to the remote for some time,
 because you'll be able to check changes you make against other changes that
 had been made up to that point. Even if you are not working on the same part
 of the code that someone else was working on last, there is potential that
 conflicts an come up as more people are working on a project and as that
 project gets bigger.

 How would you collaborate without using Git or GitHub? What would be easier,
 and what would be harder?

 Without git/github, I'd probably collaborate using email. i guess a way it might
 be easier to do this is that some UI would be easier than using the terminal,
 but as i get better with terminal commands, that benefit is losing value. It
 would probably be much harder to find where changes are made and see what
 exactly the changes are. It would also be harder to collaborate with larger
 groups.


When would you want to make changes in a separate branch rather than directly
in master? What benefits does each approach have?

While making changes directly into the master branch is easier and requires less
steps, once you have code go "live" you probably don't want to update the master
every time you're working on any small changes/bug fixes.

 Rather than simply pulling and pushing, you need to pull changes into your
 local master branch, merge the local master into your branch (different-oil,
 in our case), then push your branch to the remote before finally merging your
 branch into master, either locally or on GitHub.
